row.names(demult.liver_exprs) <- demult.liver_exprs$X
demult.liver_exprs$X <- NULL
liver_exprs.norm <- sweep(demult.liver_exprs,2,colSums(demult.liver_exprs)/(10^6),`/`)
# DE gene analysis for muscle tissue
design <- model.matrix(~0+factor(c(1,1,1,1,1,2,2,2,2,2,3,3,3,3,3)))
colnames(design) <- c('SD.L','SD.MET.L','CR.L')
fit <- lmFit(mouse_exprs.muscle.norm,design)
library(limma)
fit <- lmFit(mouse_exprs.muscle.norm,design)
fit <- lmFit(muscle_exprs.norm,design)
contrast.matrix <- makeContrasts(CR.L - SD.L,SD.MET.L - SD.L,levels=design)
fit2 <- contrasts.fit(fit,contrast.matrix)
fit2 <- eBayes(fit2)
# DE genes for CR mice against control mice
muscle.comparison1 <- topTable(fit2, coef=1, adjust="BH", p.value = 0.05, number = nrow(muscle_exprs.norm))
# DE genes for SD+Met mice against control mice
muscle.comparison2 <- topTable(fit2, coef=2, adjust='BH', p.value = 0.05, number = nrow(muscle_exprs.norm))
results <- decideTests(fit2)
vennDiagram(results)
# DE gene analysis for liver tissue
fit <- lmFit(liver_exprs.norm,design)
contrast.matrix <- makeContrasts(CR.L - SD.L,SD.MET.L - SD.L,levels=design)
fit2 <- contrasts.fit(fit,contrast.matrix)
fit2 <- eBayes(fit2)
# DE genes for CR mice against control mice in liver tissue
liver.comparison1 <- topTable(fit2, coef=1, adjust="BH", p.value = 0.05, number = nrow(liver_exprs.norm))
# DE genes for SD+Met mice against control mice in liver tissue
liver.comparison2 <- topTable(fit2, coef=2, adjust='BH', p.value = 0.05, number = nrow(liver_exprs.norm))
results <- decideTests(fit2)
vennDiagram(results)
# load data
mouse_exprs <- read.csv('/Users/howard/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/BE700_mouse_expression(1).csv', stringsAsFactors = FALSE)
mouse_pheno <- read.csv('/Users/howard/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/BE700_mouse_pheno.csv', stringsAsFactors = FALSE)
# process muscle tissue dataset
muscle_exprs <- mouse_exprs[,c(1:16)]
muscle_exprs <- muscle_exprs[complete.cases(muscle_exprs),]
muscle_exprs <- muscle_exprs[which(muscle_exprs$X!=''),]
demult.muscle_exprs <- aggregate(.~X,data=muscle_exprs,FUN=median)
row.names(demult.muscle_exprs) <- demult.muscle_exprs$X
demult.muscle_exprs$X <- NULL
muscle_exprs.norm <- sweep(demult.muscle_exprs,2,colSums(demult.muscle_exprs)/(10^6),`/`)
# process liver tissue dataset
liver_exprs <- mouse_exprs[,-c(2:16)]
liver_exprs <- liver_exprs[complete.cases(liver_exprs),]
liver_exprs <- liver_exprs[which(liver_exprs$X!=''),]
demult.liver_exprs <- aggregate(.~X,data=liver_exprs,FUN=median)
row.names(demult.liver_exprs) <- demult.liver_exprs$X
demult.liver_exprs$X <- NULL
liver_exprs.norm <- sweep(demult.liver_exprs,2,colSums(demult.liver_exprs)/(10^6),`/`)
design <- model.matrix(~0+factor(c(1,1,1,1,1,2,2,2,2,2,3,3,3,3,3)))
colnames(design) <- c('SD.L','SD.MET.L','CR.L')
contrast.matrix <- makeContrasts(CR.L - SD.L,SD.MET.L - SD.L,levels=design)
# DE gene analysis for muscle tissue
muscle.fit <- lmFit(muscle_exprs.norm,design)
muscle.fit2 <- contrasts.fit(muscle.fit,contrast.matrix)
muscle.fit2 <- eBayes(muscle.fit2)
# DE genes for CR mice against control mice in muscle tissue
muscle.comparison1 <- topTable(muscle.fit2, coef=1, adjust="BH", p.value = 0.05, number = nrow(muscle_exprs.norm))
# DE genes for SD+Met mice against control mice in muscle tissue
muscle.comparison2 <- topTable(muscle.fit2, coef=2, adjust='BH', p.value = 0.05, number = nrow(muscle_exprs.norm))
# DE gene analysis for liver tissue
liver.fit <- lmFit(liver_exprs.norm,design)
liver.fit2 <- contrasts.fit(liver.fit,contrast.matrix)
liver.fit2 <- eBayes(liver.fit2)
# DE genes for CR mice against control mice in liver tissue
liver.comparison1 <- topTable(liver.fit2, coef=1, adjust="BH", p.value = 0.05, number = nrow(liver_exprs.norm))
# DE genes for SD+Met mice against control mice in liver tissue
liver.comparison2 <- topTable(liver.fit2, coef=2, adjust='BH', p.value = 0.05, number = nrow(liver_exprs.norm))
View(muscle.comparison1)
# PCA for muscle tissue with DE genes
muscle_exprs.pca <- prcomp(t(muscle_exprs.norm[c(rownames(muscle.comparison1),rownames(muscle.comparison2)),]))
p <- ggbiplot(muscle_exprs.pca, var.axes = FALSE,groups = c(rep('SD-L',5),rep('SD-MET-L',5),rep('CR-L',5)),ellipse = TRUE)
library(ggbiplot)
p <- ggbiplot(muscle_exprs.pca, var.axes = FALSE,groups = c(rep('SD-L',5),rep('SD-MET-L',5),rep('CR-L',5)),ellipse = TRUE)
p + ggtitle('PCA of Mouse Muscle Samples')
# PCA for muscle tissue with DE genes
muscle_exprs.pca <- prcomp(t(muscle_exprs.norm[unique(c(rownames(muscle.comparison1),rownames(muscle.comparison2))),]))
p <- ggbiplot(muscle_exprs.pca, var.axes = FALSE,groups = c(rep('SD-L',5),rep('SD-MET-L',5),rep('CR-L',5)),ellipse = TRUE)
p + ggtitle('PCA of Mouse Muscle Samples')
# PCA plot for mouse liver
liver_exprs.pca. <- prcomp(t(liver_exprs.norm[unique(c(rownames(liver.comparison1),rownames(liver.comparison2))),]))
p <- ggbiplot(liver_exprs.pca., var.axes = FALSE,groups = c(rep('SD-L',5),rep('SD-MET-L',5),rep('CR-L',5)),ellipse = TRUE)
p + ggtitle('PCA of Mouse Liver Samples')
library(bnlearn)
muscle_DEgenes.tp <- as.data.frame(t(muscle_exprs.norm[unique(c(rownames(muscle.comparison1),rownames(muscle.comparison2))),]))
View(muscle_DEgenes.tp)
muscle_DEgenes.tp$Group <- c(rep(1,5),rep(2,5),rep(3,5))
rownames(muscle_DEgenes.tp) <- NULL
res <- hc(muscle_DEgenes.tp)
plot(res)
muscle.res <- hc(muscle_DEgenes.tp)
plot(muscle.res)
muscle_DEgenes <- muscle_exprs.norm[unique(c(rownames(muscle.comparison1),rownames(muscle.comparison2))),]
muscle_DEgenes.tp <- as.data.frame(t(muscle_DEgenes))
muscle_DEgenes.tp$Group <- c(rep(1,5),rep(2,5),rep(3,5))
rownames(muscle_DEgenes.tp) <- NULL
muscle.res <- hc(muscle_DEgenes.tp)
plot(muscle.res)
muscle.ft <- bn.fit(muscle.res,muscle_DEgenes)
muscle.ft <- bn.fit(muscle.res,muscle_DEgenes.tp)
muscle.pred <- predict(muscle.ft, "Group",method='bayes-lw',data=muscle_DEgenes.tp)
pred
muscle.pred
# Bayesian network classifer for liver tissue
liver_DEgenes <- liver_exprs.norm[unique(c(rownames(liver.comparison1)[1:150],rownames(liver.comparison2)[1:150])),]
liver_DEgenes.tp <- as.data.frame(t(liver_DEgenes))
liver_DEgenes.tp$Group <- c(rep(1,5),rep(2,5),rep(3,5))
rownames(liver_DEgenes.tp) <- NULL
liver.res <- hc(liver_DEgenes.tp)
plot(liver.res)
liver.ft <- bn.fit(liver.res,liver_DEgenes.tp)
liver.pred <- predict(liver.ft, "Group",method='bayes-lw',data=liver_DEgenes.tp)
liver.pred
# load data
mouse_exprs <- read.csv('/Users/howard/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/BE700_mouse_expression(1).csv', stringsAsFactors = FALSE)
mouse_pheno <- read.csv('/Users/howard/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/BE700_mouse_pheno.csv', stringsAsFactors = FALSE)
# process muscle tissue dataset
muscle_exprs <- mouse_exprs[,c(1:16)]
muscle_exprs <- muscle_exprs[complete.cases(muscle_exprs),]
muscle_exprs <- muscle_exprs[which(muscle_exprs$X!=''),]
demult.muscle_exprs <- aggregate(.~X,data=muscle_exprs,FUN=median)
row.names(demult.muscle_exprs) <- demult.muscle_exprs$X
demult.muscle_exprs$X <- NULL
muscle_exprs.norm <- sweep(demult.muscle_exprs,2,colSums(demult.muscle_exprs)/(10^6),`/`)
# process liver tissue dataset
liver_exprs <- mouse_exprs[,-c(2:16)]
liver_exprs <- liver_exprs[complete.cases(liver_exprs),]
liver_exprs <- liver_exprs[which(liver_exprs$X!=''),]
demult.liver_exprs <- aggregate(.~X,data=liver_exprs,FUN=median)
row.names(demult.liver_exprs) <- demult.liver_exprs$X
demult.liver_exprs$X <- NULL
liver_exprs.norm <- sweep(demult.liver_exprs,2,colSums(demult.liver_exprs)/(10^6),`/`)
design <- model.matrix(~0+factor(c(1,1,1,1,1,2,2,2,2,2,3,3,3,3,3)))
colnames(design) <- c('SD.L','SD.MET.L','CR.L')
contrast.matrix <- makeContrasts(CR.L - SD.L,SD.MET.L - SD.L,levels=design)
# DE gene analysis for muscle tissue
muscle.fit <- lmFit(muscle_exprs.norm,design)
muscle.fit2 <- contrasts.fit(muscle.fit,contrast.matrix)
muscle.fit2 <- eBayes(muscle.fit2)
# DE genes for CR mice against control mice in muscle tissue
muscle.comparison1 <- topTable(muscle.fit2, coef=1, adjust="BH", p.value = 0.05, number = nrow(muscle_exprs.norm))
# DE genes for SD+Met mice against control mice in muscle tissue
muscle.comparison2 <- topTable(muscle.fit2, coef=2, adjust='BH', p.value = 0.05, number = nrow(muscle_exprs.norm))
# DE gene analysis for liver tissue
liver.fit <- lmFit(liver_exprs.norm,design)
liver.fit2 <- contrasts.fit(liver.fit,contrast.matrix)
liver.fit2 <- eBayes(liver.fit2)
# DE genes for CR mice against control mice in liver tissue
liver.comparison1 <- topTable(liver.fit2, coef=1, adjust="BH", p.value = 0.05, number = nrow(liver_exprs.norm))
# DE genes for SD+Met mice against control mice in liver tissue
liver.comparison2 <- topTable(liver.fit2, coef=2, adjust='BH', p.value = 0.05, number = nrow(liver_exprs.norm))
# PCA for muscle tissue with DE genes
muscle_exprs.pca <- prcomp(t(muscle_exprs.norm[unique(c(rownames(muscle.comparison1),rownames(muscle.comparison2))),]))
p <- ggbiplot(muscle_exprs.pca, var.axes = FALSE,groups = c(rep('SD-L',5),rep('SD-MET-L',5),rep('CR-L',5)),ellipse = TRUE)
p + ggtitle('PCA of Mouse Muscle Samples')
# PCA plot for mouse liver
liver_exprs.pca. <- prcomp(t(liver_exprs.norm[unique(c(rownames(liver.comparison1),rownames(liver.comparison2))),]))
p <- ggbiplot(liver_exprs.pca., var.axes = FALSE,groups = c(rep('SD-L',5),rep('SD-MET-L',5),rep('CR-L',5)),ellipse = TRUE)
p + ggtitle('PCA of Mouse Liver Samples')
# Bayesian network classifer for muscle tissue
muscle_DEgenes <- muscle_exprs.norm[unique(c(rownames(muscle.comparison1),rownames(muscle.comparison2))),]
muscle_DEgenes.tp <- as.data.frame(t(muscle_DEgenes))
muscle_DEgenes.tp$Group <- c(rep(1,5),rep(2,5),rep(3,5))
rownames(muscle_DEgenes.tp) <- NULL
muscle.res <- hc(muscle_DEgenes.tp)
plot(muscle.res)
muscle.ft <- bn.fit(muscle.res,muscle_DEgenes.tp)
muscle.pred <- predict(muscle.ft, "Group",method='bayes-lw',data=muscle_DEgenes.tp)
muscle.pred
# Bayesian network classifer for liver tissue
liver_DEgenes <- liver_exprs.norm[unique(c(rownames(liver.comparison1)[1:150],rownames(liver.comparison2)[1:150])),]
liver_DEgenes.tp <- as.data.frame(t(liver_DEgenes))
liver_DEgenes.tp$Group <- c(rep(1,5),rep(2,5),rep(3,5))
rownames(liver_DEgenes.tp) <- NULL
liver.res <- hc(liver_DEgenes.tp)
plot(liver.res)
save.image("D:/Users/Howard/Dropbox/Boston University/Statistical Machine Learning/MA751_FinalProject_env.RData")
timecost_df <- data.frame()
bikecost_total <- 1560
bikecost_daily <- bikecost_total/4
mouse_bgx <-readBGX('/Users/Howard/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/GSE40936_RAW/GPL6885_MouseRef-8_V2_0_R0_11278551_A.bgx.gz')
library(illuminaio)
mouse_bgx <-readBGX('/Users/Howard/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/GSE40936_RAW/GPL6885_MouseRef-8_V2_0_R0_11278551_A.bgx.gz')
View(mouse_bgx)
mouse_exprs <- read.csv('/Users/howar/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/BE700_mouse_expression(1).csv', stringsAsFactors = FALSE)
mouse_pheno <- read.csv('/Users/howar/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/BE700_mouse_pheno.csv', stringsAsFactors = FALSE)
mouse_exprs <- read.csv('/Users/howard/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/BE700_mouse_expression(1).csv', stringsAsFactors = FALSE)
mouse_pheno <- read.csv('/Users/howard/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/BE700_mouse_pheno.csv', stringsAsFactors = FALSE)
# process mouse muscle data
mouse_exprs.muscle <- mouse_exprs[,c(1:16)]
mouse_exprs.muscle <- mouse_exprs.muscle[complete.cases(mouse_exprs.muscle),]
mouse_exprs_unknown.muscle <- mouse_exprs.muscle[which(mouse_exprs.muscle$X==''),]
mouse_exprs_unknown.muscle$X <- as.character(1:nrow(mouse_exprs_unknown.muscle))
mouse_exprs_known.muscle <- mouse_exprs.muscle[which(mouse_exprs.muscle$X!=''),]
demult.mouse_exprs_known.muscle <- aggregate(.~X,data=mouse_exprs_known.muscle,FUN=median)
View(mouse_exprs_known.muscle)
# load data
mouse_exprs <- read.csv('/Users/howar/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/BE700_mouse_expression(1).csv', stringsAsFactors = FALSE)
mouse_pheno <- read.csv('/Users/howar/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/BE700_mouse_pheno.csv', stringsAsFactors = FALSE)
# load data
mouse_exprs <- read.csv('/Users/howard/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/BE700_mouse_expression(1).csv', stringsAsFactors = FALSE)
mouse_pheno <- read.csv('/Users/howard/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/BE700_mouse_pheno.csv', stringsAsFactors = FALSE)
# process muscle tissue dataset
muscle_exprs <- mouse_exprs[,c(1:16)]
muscle_exprs <- muscle_exprs[complete.cases(muscle_exprs),]
# process muscle tissue dataset
muscle_exprs <- mouse_exprs[,c(1:16)]
muscle_exprs <- muscle_exprs[complete.cases(muscle_exprs),]
muscle_exprs.unknown <- muscle_exprs[which(muscle_exprs$X==''),]
muscle_exprs.unknown$X <- as.character(1:nrow(muscle_exprs.unknown))
muscle_exprs <- muscle_exprs[which(muscle_exprs$X!=''),]
demult.muscle_exprs <- aggregate(.~X,data=muscle_exprs,FUN=median)
demult.muscle_exprs <- rbind(demult.muscle_exprs,muscle_exprs.unknown)
row.names(demult.muscle_exprs) <- demult.muscle_exprs$X
demult.muscle_exprs$X <- NULL
# process liver tissue dataset
liver_exprs <- mouse_exprs[,-c(2:16)]
liver_exprs <- liver_exprs[complete.cases(liver_exprs),]
liver_exprs.unknown <- liver_exprs[which(liver_exprs$X==''),]
liver_exprs.unknown$X <- as.character(1:nrow(liver_exprs.unknown))
liver_exprs <- liver_exprs[which(liver_exprs$X!=''),]
demult.liver_exprs <- aggregate(.~X,data=liver_exprs,FUN=median)
demult.liver_exprs <- rbind(demult.liver_exprs,liver_exprs.unknown)
row.names(demult.liver_exprs) <- demult.liver_exprs$X
demult.liver_exprs$X <- NULL
View(liver_exprs)
# process muscle tissue dataset
muscle_exprs <- mouse_exprs[,c(1:16)]
muscle_exprs <- muscle_exprs[complete.cases(muscle_exprs),]
muscle_exprs.unknown <- muscle_exprs[which(muscle_exprs$X==''),]
muscle_exprs.unknown$X <- as.character(1:nrow(muscle_exprs.unknown))
muscle_exprs <- muscle_exprs[which(muscle_exprs$X!=''),]
demult.muscle_exprs <- aggregate(.~X,data=muscle_exprs,FUN=median)
demult.muscle_exprs <- rbind(demult.muscle_exprs,muscle_exprs.unknown)
row.names(demult.muscle_exprs) <- demult.muscle_exprs$X
demult.muscle_exprs$X <- NULL
muscle_exprs.norm <- sweep(demult.muscle_exprs,2,colSums(demult.muscle_exprs)/(10^6),`/`)
muscle_exprs.norm <- demult.muscle_exprs
# process liver tissue dataset
liver_exprs <- mouse_exprs[,-c(2:16)]
liver_exprs <- liver_exprs[complete.cases(liver_exprs),]
View(muscle_exprs)
View(muscle_exprs.norm)
# process liver tissue dataset
liver_exprs <- mouse_exprs[,-c(2:16)]
liver_exprs <- liver_exprs[complete.cases(liver_exprs),]
liver_exprs.unknown <- liver_exprs[which(liver_exprs$X==''),]
liver_exprs.unknown$X <- as.character(1:nrow(liver_exprs.unknown))
liver_exprs <- liver_exprs[which(liver_exprs$X!=''),]
# load data
mouse_exprs <- read.csv('/Users/howard/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/BE700_mouse_expression(1).csv', stringsAsFactors = FALSE)
mouse_pheno <- read.csv('/Users/howard/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/BE700_mouse_pheno.csv', stringsAsFactors = FALSE)
# process muscle tissue dataset
muscle_exprs <- mouse_exprs[,c(1:16)]
muscle_exprs <- muscle_exprs[complete.cases(muscle_exprs),]
muscle_exprs.unknown <- muscle_exprs[which(muscle_exprs$X==''),]
muscle_exprs.unknown$X <- as.character(1:nrow(muscle_exprs.unknown))
muscle_exprs <- muscle_exprs[which(muscle_exprs$X!=''),]
demult.muscle_exprs <- aggregate(.~X,data=muscle_exprs,FUN=median)
demult.muscle_exprs <- rbind(demult.muscle_exprs,muscle_exprs.unknown)
row.names(demult.muscle_exprs) <- demult.muscle_exprs$X
demult.muscle_exprs$X <- NULL
muscle_exprs.norm <- sweep(demult.muscle_exprs,2,colSums(demult.muscle_exprs)/(10^6),`/`)
# process liver tissue dataset
liver_exprs <- mouse_exprs[,-c(2:16)]
liver_exprs <- liver_exprs[complete.cases(liver_exprs),]
liver_exprs.unknown <- liver_exprs[which(liver_exprs$X==''),]
liver_exprs.unknown$X <- as.character(1:nrow(liver_exprs.unknown))
liver_exprs <- liver_exprs[which(liver_exprs$X!=''),]
demult.liver_exprs <- aggregate(.~X,data=liver_exprs,FUN=median)
demult.liver_exprs <- rbind(demult.liver_exprs,liver_exprs.unknown)
row.names(demult.liver_exprs) <- demult.liver_exprs$X
demult.liver_exprs$X <- NULL
liver_exprs.norm <- sweep(demult.liver_exprs,2,colSums(demult.liver_exprs)/(10^6),`/`)
sapply(liver_exprs.norm, mean)
sapply(liver_exprs.norm, var)
sapply(mouse_exprs.liver.norm, mean)
design <- model.matrix(~0+factor(c(rep(1,5),rep(2,5),rep(3,5))))
colnames(design) <- c('SD.L','SD.MET.L','CR.L')
contrast.matrix <- makeContrasts(CR.L - SD.L,SD.MET.L - SD.L,levels=design)
library(ggplot2)
library(reshape2)
library(dplyr)
library(ggbiplot)
library(pca3d)
library(limma)
library(ComplexHeatmap)
contrast.matrix <- makeContrasts(CR.L - SD.L,SD.MET.L - SD.L,levels=design)
# DE gene analysis for muscle tissue
muscle.fit <- lmFit(muscle_exprs.norm,design)
muscle.fit2 <- contrasts.fit(muscle.fit,contrast.matrix)
muscle.fit2 <- eBayes(muscle.fit2)
# DE genes for CR mice against control mice in muscle tissue
muscle.comparison1 <- topTable(muscle.fit2, coef=1, adjust="fdr", p.value = 0.05, number = nrow(muscle_exprs.norm))
# DE genes for SD+Met mice against control mice in muscle tissue
muscle.comparison2 <- topTable(muscle.fit2, coef=2, adjust='fdr', p.value = 0.05, number = nrow(muscle_exprs.norm))
muscle_exprs.norm <- demult.muscle_exprs
liver_exprs.norm <- demult.liver_exprs
# DE gene analysis for muscle tissue
muscle.fit <- lmFit(muscle_exprs.norm,design)
muscle.fit2 <- contrasts.fit(muscle.fit,contrast.matrix)
muscle.fit2 <- eBayes(muscle.fit2)
# DE genes for CR mice against control mice in muscle tissue
muscle.comparison1 <- topTable(muscle.fit2, coef=1, adjust="fdr", p.value = 0.05, number = nrow(muscle_exprs.norm))
# DE genes for SD+Met mice against control mice in muscle tissue
muscle.comparison2 <- topTable(muscle.fit2, coef=2, adjust='fdr', p.value = 0.05, number = nrow(muscle_exprs.norm))
vennDiagram(decideTests(muscle.fit2))
# DE gene analysis for liver tissue
liver.fit <- lmFit(liver_exprs.norm,design)
liver.fit2 <- contrasts.fit(liver.fit,contrast.matrix)
liver.fit2 <- eBayes(liver.fit2)
# DE genes for CR mice against control mice in liver tissue
liver.comparison1 <- topTable(liver.fit2, coef=1, adjust="fdr", p.value = 0.05, number = nrow(liver_exprs.norm))
# DE genes for SD+Met mice against control mice in liver tissue
liver.comparison2 <- topTable(liver.fit2, coef=2, adjust='fdr', p.value = 0.05, number = nrow(liver_exprs.norm))
View(liver.comparison2)
View(liver.comparison1)
vennDiagram(decideTests(liver.fit2))
liver.DEgenes <- unique(c(rownames(liver.comparison1),rownames(liver.comparison2)))
muscle.DEgenes <- unique(c(rownames(muscle.comparison1),rownames(muscle.comparison2)))
View(liver_exprs.unknown)
liver.DEgenes.unknown <- liver.DEgenes[which(liver.DEgenes %in% liver_exprs.unknown$X)]
muscle.DEgenes.unknown <- muscle.DEgenes[which(muscle.DEgenes %in% muscle_exprs.unknown$X)]
View(muscle.comparison1)
install.packages("taxize")
library(taxize)
library(taxize)
install.packages("installr")
library(installr)
updateR()
install.packages("taxize")
library(taxize)
temp <- gnr_resolve(names = c("Helianthos annus", "Homo saapiens"))
head(temp)
View(temp)
specieslist <- c("Abies procera","Pinus contorta")
classification(specieslist, db = 'itis')
get_uid(sciname = "Pinus")
library(installr)
install.packages('installr')
library(installr)
update.packages()
downstream("Apis", downto = "Species", db = "col")
children(get_colid("Apis"))
children("Pinaceae", db = "ncbi")
kingdom_list <- c("archaea", "bacteria", "fungi", "invertebrate", "plant",
"protozoa", "vertibrate", "vertibrate_other", "viral")
children("vertibrate, db = "ncbi")
children("vertibrate", db = "ncbi")
children("Vertibrate", db = "ncbi")
children("vertibrate", db = "ncbi")
get_colid("vertibrate")
children("vertibrate", db = "col")
children("vertebrate", db = "ncbi")
children("vertebrate", db = "col")
children("animal", db = "col")
children("animal", db = "ncbi")
children("Animalia", db = "ncbi")
children("Animalia", db = "col")
children("Animalia", db = "ncbi")
temp <- gnr_resolve(names = c("animalia"))
head(temp)
classification("homo sapien", db = 'ncbi')
children("Metazoa", db = "ncbi")
children("Eumetazoa", db = "ncbi")
children("Eukaryota", db = "ncbi")
children("Metazoa", db = "ncbi")
ncbi_children("Metazoa")
use_entrez()
ncbi_children("Placozoa")
children <- ncbi_children("Placozoa")
View(children)
children$Placozoa
children[1]
children <- children[1]
View(children)
children <- children[[1]]
View(children)
ncbi_children("Trichoplacidae")
ncbi_children("Polyplacotoma")
classification("Polyplacotoma",db='ncbi')
View(children)
children("archaea", db = "ncbi")
classification("Atadenovirus",db='ncbi')
itis_kingdomnames()
children("vertebrate_mammalian", db = "ncbi")
children("eukaryota", db = "ncbi")
install.packages('shiny')
library(shiny)
runApp('D:/Users/Howard/Documents/GitHub/animalcules.preprocess/inst/shiny/ui_01_demultiplex.R')
runApp('/Users/Howard/Documents/GitHub/animalcules.preprocess/inst/shiny/ui_01_demultiplex.R')
install.packages('DT')
runApp('/Users/Howard/Documents/GitHub/animalcules.preprocess/inst/shiny/ui_01_demultiplex.R')
install.packages('Biostrings')
runApp('/Users/Howard/Documents/GitHub/animalcules.preprocess/inst/shiny/ui_01_demultiplex.R')
runApp('/Users/Howard/Documents/GitHub/animalcules.preprocess/inst/shiny/ui_01_demultiplex.R')
BiocManager::install("Biostrings")
install.packages("BiocManager")
BiocManager::install("Biostrings")
runApp('/Users/Howard/Documents/GitHub/animalcules.preprocess/inst/shiny/ui_01_demultiplex.R')
install.packages('rsconnect')
runApp('/Users/Howard/Documents/GitHub/animalcules.preprocess/inst/shiny/ui_01_demultiplex.R')
runApp('/Users/Howard/Documents/GitHub/animalcules.preprocess/inst/shiny/ui_01_demultiplex.R')
runApp('/Users/Howard/Documents/GitHub/animalcules.preprocess/inst/shiny/animalcule_preprocess_app.R')
runApp('/Users/Howard/Documents/GitHub/animalcules.preprocess/inst/shiny/animalcule_preprocess_app.R')
file.path("R", "download_refseq.R")
wd()
getwd()
setwd('D:/Users/Howard/Documents/GitHub/animalcules.preprocess/')
runApp('inst/shiny/animalcule_preprocess_app.R')
library(shiny)
runExample("01_hello")
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
kingdom_list <- c("bacteria","viral")
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
kingdom_list <- c("bacteria","viral")
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/test.R')
runApp('inst/shiny/UI/test.R')
runApp('inst/shiny/UI/test.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
library(taxize)
children("bacteria", db = 'ncbi')
children_list <- children("bacteria", db = 'ncbi')
children_list <- children_list[[1]]
children_list$childtaxa_name
View(children_list)
children_list.p <- children_list[which(children_list$childtaxa_rank == 'phylum'),]
children_list.p$childtaxa_name
children_list.p$childtaxa_name
runApp('inst/shiny/UI/UI_ref_seq_2.R')
children_list <- children("viral", db = 'ncbi')
children_list <- children_list[[1]]
children_list <- children("viruses", db = 'ncbi')
children_list <- children_list[[1]]
View(children_list)
View(children_list.p)
children_list <- children("bacteria", db = 'ncbi')
children_list <- children_list[[1]]
View(children_list)
children_list <- children("viruses", db = 'ncbi')
children_list <- children_list[[1]]
View(children_list)
children_list <- children("eukaryota", db = 'ncbi')
children_list <- children_list[[1]]
View(children_list)
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
runApp('inst/shiny/UI/UI_ref_seq_2.R')
